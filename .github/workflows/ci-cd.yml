name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    permissions:
      packages: write   # Разрешение для записи в пакеты (GHCR)
      contents: read    # Разрешение для чтения содержимого репозитория

    steps:
        # Шаг очистки кэша (если нужно удалить старые кэшированные данные)
      - name: Clear cache
        run: |
            rm -rf ${{ github.workspace }}/.cache

      - name: Checkout code
        run: |
          if [ ! -d "selena-prod/user-service/.git" ]; then
            echo "Cloning the repository..."
            git clone https://github.com/vitalii-q/selena-user-service selena-prod/user-service
          else
            echo "Repository already exists. Pulling the latest changes..."
            cd selena-prod/user-service && git pull
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        run: |
          cd selena-prod/user-service
          docker build -t ${{ secrets.USER_SERVICE_IMAGE_NAME }} .

      - name: Run tests
        run: |
          docker run ${{ secrets.USER_SERVICE_IMAGE_NAME }} echo "Container is running"

      - name: Build Docker image for GHCR
        run: |
          cd selena-prod/user-service
          docker build -t ghcr.io/${{ github.repository_owner }}/user-service:latest .

      # GitHub Container Registry
      - name: Log in to GitHub Container Registry
        run: |
          docker login ghcr.io -u vitalii-q -p ${{ secrets.GITHUB_TOKEN }}
          
      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/selena-user-service/user-service:latest

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
      - name: Pull latest changes from selena-devops
        run: |
          cd selena-prod
          if [ ! -d "selena-prod/.git" ]; then
            echo "Initializing the repository and pulling the latest changes..."
            git init
            
            # Проверяем, есть ли уже удаленный репозиторий
            if ! git remote get-url origin &>/dev/null; then
                echo "Adding remote origin..."
                git remote add origin git@github.com:vitalii-q/selena-devops.git
            else
                echo "Remote origin is already set."
            fi

            git pull origin main
          else
            echo "Repository already exists. Pulling the latest changes..."
            git pull origin main
          fi

      - name: Remove existing containers
        run: |
          cd selena-prod
          docker-compose down || true

      - name: Deploy user-service application
        run: |
          pwd # покажет текущую директорию
          ls # для проверки содержимого
          cd selena-prod
          docker-compose pull user-service
          docker-compose up -d user-service
          docker ps -a
